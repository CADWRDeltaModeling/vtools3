{# raw is for ignoring templating with cookiecutter, leaving it for use with conda-build -#}
{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set project = pyproject['project'] %}
#{% set version = load_setup_py_data().get('version', '0.0.0') %}

package:
  name: vtools3
  version: {{ GIT_DESCRIBE_TAG }}

source:
  path: ..

build:
  # If the installation is complex, or different between Unix and Windows, use
  # separate bld.bat and build.sh files instead of this key.  Add the line
  # "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or
  # "skip: True  # [not win]" to limit to Windows.
  script_env:
   - SETUPTOOLS_SCM_PRETEND_VERSION={{ GIT_DESCRIBE_TAG }}
  script: {{ PYTHON }} -m pip install --no-build-isolation --no-deps --ignore-installed -vv .
  noarch: python
  number: 0
  entry_points:
    {% for name, reference in project['scripts'].items() %}
    - {{ name }} = {{ reference }}
    {% endfor %}

requirements:
  host:
    - python {{ project['requires-python'] }}
    - pip
    - numpy >=1.23
    {% for dep in pyproject['build-system']['requires'] %}
    - {{ dep.lower() }}
    {% endfor %}
  build:
    - python
    - setuptools
    - pandas >=0.23
    - numpy >=1.23
  run:
    - python
    - numpy  >=1.11
    - pandas >=0.23
    - scipy >=1.2
    - beautifulsoup4 >=4.8
    - xlrd
    {% for dep in project.get('dependencies', []) %}
    - {{ dep.lower() }}
    {% endfor %}  
test:
  imports:
    - vtools
  source_files:
    - tests
  requires:
    {% for dep in project.get("optional-dependencies", {}).get('test', []) %}
    - {{ dep.lower() }}
    {% endfor %}
  commands:
    - (setlocal && cd tests && pytest && endlocal) # [win]
    - (cd tests; pytest) # [unix]

about:
  home: https://github.com/CADWRDeltaModeling/vtools3
  summary: "Timeseries analysis and processing tools using pandas/xarray"
  license: "Apache"
  license_file: LICENSE
