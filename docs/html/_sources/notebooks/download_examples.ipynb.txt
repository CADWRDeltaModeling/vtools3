{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test for downloading scripts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:26.959341Z",
     "start_time": "2019-11-08T21:24:25.600226Z"
    }
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "from vtools.datastore.download_nwis import nwis_download\n",
    "from vtools.datastore.download_noaa import noaa_download\n",
    "from vtools.datastore.download_wdl import wdl_download\n",
    "from vtools.datastore.download_cdec import cdec_download\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:26.965345Z",
     "start_time": "2019-11-08T21:24:26.961328Z"
    }
   },
   "outputs": [],
   "source": [
    "def clean_up(expected_artifacts):\n",
    "    # Clean up\n",
    "    for f in expected_artifacts:\n",
    "        if os.path.exists(f):\n",
    "            os.remove(f)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test NWIS Download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:34.245330Z",
     "start_time": "2019-11-08T21:24:26.967341Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading station: 11313452\n",
      "http://nwis.waterservices.usgs.gov/nwis/iv/?sites=11313452&startDT=2019-01-01&endDT=2019-03-10&format=rdb\n",
      "No failed stations\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>agency_cd</th>\n",
       "      <th>site_no</th>\n",
       "      <th>datetime</th>\n",
       "      <th>tz_cd</th>\n",
       "      <th>15416_00060</th>\n",
       "      <th>15416_00060_cd</th>\n",
       "      <th>15414_00065</th>\n",
       "      <th>15414_00065_cd</th>\n",
       "      <th>15417_72137</th>\n",
       "      <th>15417_72137_cd</th>\n",
       "      <th>176616_72255</th>\n",
       "      <th>176616_72255_cd</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>5s</td>\n",
       "      <td>15s</td>\n",
       "      <td>20d</td>\n",
       "      <td>6s</td>\n",
       "      <td>14n</td>\n",
       "      <td>10s</td>\n",
       "      <td>14n</td>\n",
       "      <td>10s</td>\n",
       "      <td>14n</td>\n",
       "      <td>10s</td>\n",
       "      <td>14n</td>\n",
       "      <td>10s</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-01-01 00:00</td>\n",
       "      <td>PST</td>\n",
       "      <td>-11100</td>\n",
       "      <td>P</td>\n",
       "      <td>5.13</td>\n",
       "      <td>P</td>\n",
       "      <td>-2660</td>\n",
       "      <td>P</td>\n",
       "      <td>-0.67</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-01-01 00:15</td>\n",
       "      <td>PST</td>\n",
       "      <td>-10500</td>\n",
       "      <td>P</td>\n",
       "      <td>5.22</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.63</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-01-01 00:30</td>\n",
       "      <td>PST</td>\n",
       "      <td>-10600</td>\n",
       "      <td>P</td>\n",
       "      <td>5.31</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.63</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-01-01 00:45</td>\n",
       "      <td>PST</td>\n",
       "      <td>-10900</td>\n",
       "      <td>P</td>\n",
       "      <td>5.40</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.64</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6620</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-03-10 22:45</td>\n",
       "      <td>PST</td>\n",
       "      <td>5230</td>\n",
       "      <td>P</td>\n",
       "      <td>6.71</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.29</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6621</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-03-10 23:00</td>\n",
       "      <td>PST</td>\n",
       "      <td>4120</td>\n",
       "      <td>P</td>\n",
       "      <td>6.62</td>\n",
       "      <td>P</td>\n",
       "      <td>-3550</td>\n",
       "      <td>P</td>\n",
       "      <td>0.23</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6622</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-03-10 23:15</td>\n",
       "      <td>PST</td>\n",
       "      <td>7800</td>\n",
       "      <td>P</td>\n",
       "      <td>6.54</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.43</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6623</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-03-10 23:30</td>\n",
       "      <td>PST</td>\n",
       "      <td>6550</td>\n",
       "      <td>P</td>\n",
       "      <td>6.45</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.36</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6624</td>\n",
       "      <td>USGS</td>\n",
       "      <td>11313452</td>\n",
       "      <td>2019-03-10 23:45</td>\n",
       "      <td>PST</td>\n",
       "      <td>7400</td>\n",
       "      <td>P</td>\n",
       "      <td>6.37</td>\n",
       "      <td>P</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.41</td>\n",
       "      <td>P</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6625 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     agency_cd   site_no          datetime tz_cd 15416_00060 15416_00060_cd  \\\n",
       "0           5s       15s               20d    6s         14n            10s   \n",
       "1         USGS  11313452  2019-01-01 00:00   PST      -11100              P   \n",
       "2         USGS  11313452  2019-01-01 00:15   PST      -10500              P   \n",
       "3         USGS  11313452  2019-01-01 00:30   PST      -10600              P   \n",
       "4         USGS  11313452  2019-01-01 00:45   PST      -10900              P   \n",
       "...        ...       ...               ...   ...         ...            ...   \n",
       "6620      USGS  11313452  2019-03-10 22:45   PST        5230              P   \n",
       "6621      USGS  11313452  2019-03-10 23:00   PST        4120              P   \n",
       "6622      USGS  11313452  2019-03-10 23:15   PST        7800              P   \n",
       "6623      USGS  11313452  2019-03-10 23:30   PST        6550              P   \n",
       "6624      USGS  11313452  2019-03-10 23:45   PST        7400              P   \n",
       "\n",
       "     15414_00065 15414_00065_cd 15417_72137 15417_72137_cd 176616_72255  \\\n",
       "0            14n            10s         14n            10s          14n   \n",
       "1           5.13              P       -2660              P        -0.67   \n",
       "2           5.22              P         NaN            NaN        -0.63   \n",
       "3           5.31              P         NaN            NaN        -0.63   \n",
       "4           5.40              P         NaN            NaN        -0.64   \n",
       "...          ...            ...         ...            ...          ...   \n",
       "6620        6.71              P         NaN            NaN         0.29   \n",
       "6621        6.62              P       -3550              P         0.23   \n",
       "6622        6.54              P         NaN            NaN         0.43   \n",
       "6623        6.45              P         NaN            NaN         0.36   \n",
       "6624        6.37              P         NaN            NaN         0.41   \n",
       "\n",
       "     176616_72255_cd  \n",
       "0                10s  \n",
       "1                  P  \n",
       "2                  P  \n",
       "3                  P  \n",
       "4                  P  \n",
       "...              ...  \n",
       "6620               P  \n",
       "6621               P  \n",
       "6622               P  \n",
       "6623               P  \n",
       "6624               P  \n",
       "\n",
       "[6625 rows x 12 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting up\n",
    "stations = ['11313452', ]\n",
    "dest_dir = '.'\n",
    "start = pd.to_datetime('2019-01-01')\n",
    "end = pd.to_datetime('2019-03-10')\n",
    "# Run tests\n",
    "nwis_download(stations, dest_dir, start, end=end, param=None,\n",
    "              overwrite=True)\n",
    "expected_artifacts = ['{}.rdb'.format(s) for s in stations]\n",
    "for fpath in expected_artifacts:\n",
    "    ts = pd.read_csv(fpath, comment='#', delimiter='\\t')\n",
    "    assert(float(ts.loc[1]['15416_00060']) == -11100.)\n",
    "    display(ts)\n",
    "# Clean up\n",
    "clean_up(expected_artifacts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test WDL Download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:36.564270Z",
     "start_time": "2019-11-08T21:24:34.247332Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ".\\B95060_discharge.csv\n",
      "Total # data for B95060_discharge: 0\n",
      ".\\B95060_gageheight.csv\n",
      "Working on b95060_gageheight_2018.csv\n",
      "Total # data for B95060_gageheight: 35037\n",
      ".\\B95060_conductance.csv\n",
      "Skipping station/param/year because file exists: B95060_conductance.csv\n",
      ".\\B95060_velocity.csv\n",
      "Total # data for B95060_velocity: 0\n",
      ".\\B95060_temperature.csv\n",
      "Skipping station/param/year because file exists: B95060_temperature.csv\n",
      ".\\B95060_temperature.csv\n",
      "Skipping station/param/year because file exists: B95060_temperature.csv\n",
      ".\\B95060_turbidity.csv\n",
      "Total # data for B95060_turbidity: 0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>10/01/2017 00:00:00</td>\n",
       "      <td>5.65</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>10/01/2017 00:15:00</td>\n",
       "      <td>5.67</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>10/01/2017 00:30:00</td>\n",
       "      <td>5.63</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>10/01/2017 00:45:00</td>\n",
       "      <td>5.59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>10/01/2017 01:00:00</td>\n",
       "      <td>5.51</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35032</td>\n",
       "      <td>09/30/2018 22:45:00</td>\n",
       "      <td>5.29</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35033</td>\n",
       "      <td>09/30/2018 23:00:00</td>\n",
       "      <td>5.15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35034</td>\n",
       "      <td>09/30/2018 23:15:00</td>\n",
       "      <td>5.03</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35035</td>\n",
       "      <td>09/30/2018 23:30:00</td>\n",
       "      <td>4.93</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>35036</td>\n",
       "      <td>09/30/2018 23:45:00</td>\n",
       "      <td>4.81</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35037 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                         0     1  2\n",
       "0      10/01/2017 00:00:00  5.65  1\n",
       "1      10/01/2017 00:15:00  5.67  1\n",
       "2      10/01/2017 00:30:00  5.63  1\n",
       "3      10/01/2017 00:45:00  5.59  1\n",
       "4      10/01/2017 01:00:00  5.51  1\n",
       "...                    ...   ... ..\n",
       "35032  09/30/2018 22:45:00  5.29  1\n",
       "35033  09/30/2018 23:00:00  5.15  1\n",
       "35034  09/30/2018 23:15:00  5.03  1\n",
       "35035  09/30/2018 23:30:00  4.93  1\n",
       "35036  09/30/2018 23:45:00  4.81  1\n",
       "\n",
       "[35037 rows x 3 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stations = ['B95060', ]\n",
    "years = [2018, ]\n",
    "dest_dir = '.'\n",
    "wdl_download(stations, years, dest_dir, overwrite=False)\n",
    "expected_artifacts = ['{}_gageheight.csv'.format(s) for s in stations]\n",
    "for fpath in expected_artifacts:\n",
    "    ts = pd.read_csv(fpath, header=None)\n",
    "    assert(ts.loc[0][1] == 5.65)\n",
    "display(ts)\n",
    "# Clean up\n",
    "clean_up(expected_artifacts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test NOAA Download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:42.545464Z",
     "start_time": "2019-11-08T21:24:36.566278Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Station: San Francisco\n",
      "Retrieving 9414290, 20190101, 20190131...\n",
      "URL: http://tidesandcurrents.noaa.gov/api/datagetter?product=water_level&application=NOS.COOPS.TAC.PHYSOCEANL&station=9414290&begin_date=20190101&end_date=20190131&datum=NAVD&units=metric&time_zone=LST&format=csv\n",
      "Done retrieving.\n",
      "Retrieving 9414290, 20190201, 20190228...\n",
      "URL: http://tidesandcurrents.noaa.gov/api/datagetter?product=water_level&application=NOS.COOPS.TAC.PHYSOCEANL&station=9414290&begin_date=20190201&end_date=20190228&datum=NAVD&units=metric&time_zone=LST&format=csv\n",
      "Done retrieving.\n",
      "Retrieving 9414290, 20190301, 20190310...\n",
      "URL: http://tidesandcurrents.noaa.gov/api/datagetter?product=water_level&application=NOS.COOPS.TAC.PHYSOCEANL&station=9414290&begin_date=20190301&end_date=20190310&datum=NAVD&units=metric&time_zone=LST&format=csv\n",
      "Done retrieving.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date Time</th>\n",
       "      <th>Water Level</th>\n",
       "      <th>Sigma</th>\n",
       "      <th>O or I (for verified)</th>\n",
       "      <th>F</th>\n",
       "      <th>R</th>\n",
       "      <th>L</th>\n",
       "      <th>Quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2019-01-01 00:00</td>\n",
       "      <td>0.623</td>\n",
       "      <td>0.021</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2019-01-01 00:06</td>\n",
       "      <td>0.605</td>\n",
       "      <td>0.023</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2019-01-01 00:12</td>\n",
       "      <td>0.583</td>\n",
       "      <td>0.022</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2019-01-01 00:18</td>\n",
       "      <td>0.576</td>\n",
       "      <td>0.021</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2019-01-01 00:24</td>\n",
       "      <td>0.567</td>\n",
       "      <td>0.023</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16555</td>\n",
       "      <td>2019-03-10 23:30</td>\n",
       "      <td>1.427</td>\n",
       "      <td>0.048</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16556</td>\n",
       "      <td>2019-03-10 23:36</td>\n",
       "      <td>1.440</td>\n",
       "      <td>0.044</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16557</td>\n",
       "      <td>2019-03-10 23:42</td>\n",
       "      <td>1.450</td>\n",
       "      <td>0.050</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16558</td>\n",
       "      <td>2019-03-10 23:48</td>\n",
       "      <td>1.462</td>\n",
       "      <td>0.057</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16559</td>\n",
       "      <td>2019-03-10 23:54</td>\n",
       "      <td>1.484</td>\n",
       "      <td>0.041</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>v</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16560 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Date Time   Water Level   Sigma   O or I (for verified)   F   R  \\\n",
       "0      2019-01-01 00:00         0.623   0.021                       0   0   0   \n",
       "1      2019-01-01 00:06         0.605   0.023                       0   0   0   \n",
       "2      2019-01-01 00:12         0.583   0.022                       0   0   0   \n",
       "3      2019-01-01 00:18         0.576   0.021                       0   0   0   \n",
       "4      2019-01-01 00:24         0.567   0.023                       0   0   0   \n",
       "...                 ...           ...     ...                     ...  ..  ..   \n",
       "16555  2019-03-10 23:30         1.427   0.048                       0   0   0   \n",
       "16556  2019-03-10 23:36         1.440   0.044                       0   0   0   \n",
       "16557  2019-03-10 23:42         1.450   0.050                       0   0   0   \n",
       "16558  2019-03-10 23:48         1.462   0.057                       0   0   0   \n",
       "16559  2019-03-10 23:54         1.484   0.041                       0   0   0   \n",
       "\n",
       "        L  Quality   \n",
       "0       0         v  \n",
       "1       0         v  \n",
       "2       0         v  \n",
       "3       0         v  \n",
       "4       0         v  \n",
       "...    ..       ...  \n",
       "16555   0         v  \n",
       "16556   0         v  \n",
       "16557   0         v  \n",
       "16558   0         v  \n",
       "16559   0         v  \n",
       "\n",
       "[16560 rows x 8 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting up\n",
    "stations = ['9414290', ]\n",
    "dest_dir = '.'\n",
    "product = 'water_level'\n",
    "start = pd.to_datetime('2019-01-01')\n",
    "end = pd.to_datetime('2019-03-10')\n",
    "# Run tests\n",
    "noaa_download(stations, product, start, end)\n",
    "expected_artifacts = ['{}_{}.txt'.format(s, product) for s in stations]\n",
    "for fpath in expected_artifacts:\n",
    "    ts = pd.read_csv(fpath, comment='#')\n",
    "    assert(ts.loc[0][1] == 0.623)\n",
    "display(ts)\n",
    "# Clean up\n",
    "clean_up(expected_artifacts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T19:26:26.201712Z",
     "start_time": "2019-11-08T19:26:26.198709Z"
    }
   },
   "source": [
    "# Test CDEC Download"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-11-08T21:24:42.767647Z",
     "start_time": "2019-11-08T21:24:42.547466Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing station: OSJ param: ec\n",
      "http://cdec4gov.water.ca.gov/dynamicapp/req/CSVDataServlet?Stations=OSJ&SensorNums=100&dur_code=E&Start=01-01-2019&End=03-10-2019\n",
      "Found, duration code: E\n",
      "No failed stations\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION_ID</th>\n",
       "      <th>DURATION</th>\n",
       "      <th>SENSOR_NUMBER</th>\n",
       "      <th>SENSOR_TYPE</th>\n",
       "      <th>DATE TIME</th>\n",
       "      <th>OBS DATE</th>\n",
       "      <th>VALUE</th>\n",
       "      <th>DATA_FLAG</th>\n",
       "      <th>UNITS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190101 0000</td>\n",
       "      <td>20190101 0000</td>\n",
       "      <td>651</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190101 0015</td>\n",
       "      <td>20190101 0015</td>\n",
       "      <td>618</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190101 0030</td>\n",
       "      <td>20190101 0030</td>\n",
       "      <td>604</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190101 0045</td>\n",
       "      <td>20190101 0045</td>\n",
       "      <td>571</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190101 0100</td>\n",
       "      <td>20190101 0100</td>\n",
       "      <td>558</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6520</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190309 2300</td>\n",
       "      <td>20190309 2300</td>\n",
       "      <td>148</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6521</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190309 2315</td>\n",
       "      <td>20190309 2315</td>\n",
       "      <td>143</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6522</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190309 2330</td>\n",
       "      <td>20190309 2330</td>\n",
       "      <td>149</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6523</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190309 2345</td>\n",
       "      <td>20190309 2345</td>\n",
       "      <td>148</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6524</td>\n",
       "      <td>OSJ</td>\n",
       "      <td>E</td>\n",
       "      <td>100</td>\n",
       "      <td>EL COND</td>\n",
       "      <td>20190310 0000</td>\n",
       "      <td>20190310 0000</td>\n",
       "      <td>148</td>\n",
       "      <td></td>\n",
       "      <td>uS/cm</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6525 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     STATION_ID DURATION  SENSOR_NUMBER SENSOR_TYPE      DATE TIME  \\\n",
       "0           OSJ        E            100     EL COND  20190101 0000   \n",
       "1           OSJ        E            100     EL COND  20190101 0015   \n",
       "2           OSJ        E            100     EL COND  20190101 0030   \n",
       "3           OSJ        E            100     EL COND  20190101 0045   \n",
       "4           OSJ        E            100     EL COND  20190101 0100   \n",
       "...         ...      ...            ...         ...            ...   \n",
       "6520        OSJ        E            100     EL COND  20190309 2300   \n",
       "6521        OSJ        E            100     EL COND  20190309 2315   \n",
       "6522        OSJ        E            100     EL COND  20190309 2330   \n",
       "6523        OSJ        E            100     EL COND  20190309 2345   \n",
       "6524        OSJ        E            100     EL COND  20190310 0000   \n",
       "\n",
       "           OBS DATE VALUE DATA_FLAG  UNITS  \n",
       "0     20190101 0000   651            uS/cm  \n",
       "1     20190101 0015   618            uS/cm  \n",
       "2     20190101 0030   604            uS/cm  \n",
       "3     20190101 0045   571            uS/cm  \n",
       "4     20190101 0100   558            uS/cm  \n",
       "...             ...   ...       ...    ...  \n",
       "6520  20190309 2300   148            uS/cm  \n",
       "6521  20190309 2315   143            uS/cm  \n",
       "6522  20190309 2330   149            uS/cm  \n",
       "6523  20190309 2345   148            uS/cm  \n",
       "6524  20190310 0000   148            uS/cm  \n",
       "\n",
       "[6525 rows x 9 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stations = ['OSJ', ]\n",
    "dest_dir = '.'\n",
    "start = pd.to_datetime('2019-01-01')\n",
    "end = pd.to_datetime('2019-03-10')\n",
    "param = 'ec'\n",
    "cdec_download(stations, dest_dir, start, end=end, param=param,\n",
    "              overwrite=False)\n",
    "expected_artifacts = ['{}_{}.csv'.format(s, param) for s in stations]\n",
    "for fpath in expected_artifacts:\n",
    "    ts = pd.read_csv(fpath)\n",
    "    assert(float(ts.loc[0][6]) == 651.)\n",
    "display(ts)\n",
    "# Clean up\n",
    "clean_up(expected_artifacts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
